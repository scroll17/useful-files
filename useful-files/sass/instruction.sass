
                                            /// СИМВОЛ &
&   // - ссылка на родительский селектор, каким он компилируется в CSS

@mixin does-parent-exist
  @if &
    &:hover
      color: red
  @else
    a
      color: red


                                            /// ИНТЕРПОЛЯЦИЯ     -->     #{}
p:before
  content: "Я съел #{5 + 10} пирогов!"

  font: #{$font-size}/#{$line-height}
  // ->
  font: 12px/30px

$name: foo
$attr: border
p.#{$name}
  #{$attr}-color: blue
// ->
p.foo
  border-color: blue


                                            /// ДЕРЕКТИВЫ

// @IMPORT
@import "foo"   // при импорте .sass может использовать переменные/миксины из этого файла
@import "_foo.sass"  // не будет компилировать напрямую в CSS-файл

// @DEBUG
@debug 10em + 12em
// ->
"Line 1 DEBUG: 22em"

// @EXTEND
.error
 border: 1px #f00
 background-color: #fdd

.seriousError
  @extend .error
  border-width: 3px

.hoverLink
  @extend a:hover


a.important
    @extend .notice !optional  // при optional не будет создавать новых селекторов


// @AT-ROOT - изымает одно или несколько правил из родительского селектора в корневой уровень документа.
.parent
  ...
  @at-root .child
// ->
.parent {}
.child {}


// @IF
$type: monster
p
 @if $type == ocean
     color: blue
 @else if $type == matador
     color: red
 @else if $type == monster
     color: green
 @else
     color: black


// @FOR  --->  @for $var from <начало> through <конец>
@for $i from 1 through 2
   .item-#{$i}
      width: 2em * $i
// ->
.item-1
  width: 2em
.item-2
  width: 4em



// @EACH  --->  @each $var in <список или карта значений>
@each $animal in puma, sea-slug, ...
   .#{$animal}-icon
       background-image: url('/images/#{$animal}.png')
// ->
.puma-icon
  background-image: url('/images/puma.png')
.sea-slug-icon
  background-image: url('/images/sea-slug.png')

// n:
@each $animal, $color, $cursor in (puma, black, default),(sea-slug, blue, pointer),(egret, white, move)
// n:
@each $header, $size in (h1: 2em, h2: 1.5em, h3: 1.2em)
 #{$header}
     font-size: $size



// @WHILE
$i: 6
@while $i > 0
  .item-#{$i}
    width: 2em * $i
  $i: $i - 2
// ->
.item-6
  width: 12em
.item-4
  width: 8em


                                            /// ФУНКЦИИ

$grid-width: 40px
$gutter-width: 10px

@function grid-width($n)
  @return $n * $grid-width + ($n - 1) * $gutter-width
#sidebar
   width: grid-width(5)
// ->
#sidebar
    width: 240px



                                            /// МИКСИНЫ

// @MIXIN -> "="
// @include mixName -> +mixName

// n:
=large-text
  font:
     family: Arial
     size: 20px
     weight: bold
  color: #ff0000

// n:
@mixin silly-links
   a
     color: blue
     background-color: red

@include silly-links

// n:
=transform($property)
   -webkit-transform: $property
    -ms-transform: $property
    transform: $property
.box
  +transform(rotate(30deg))

// n:
@mixin box-shadow($shadows...)
  box-shadow: $shadows
.shadows
   @include box-shadow(0px 4px 5px #666, 2px 6px 10px #999)


// n:               СОДЕРЖИТ БЛОКИ СО СТИЛЯМИ -> @CONTENT ЗАМЕНЯЕТЬСЯ НА СТИЛИ
=apply-to-ie6-only
  * html
    @content
  +apply-to-ie6-only
    #logo
      background-image: url("/logo.gif")
// ->
* html #logo
   background-image: url(/logo.gif)




                                            /// УПРАВЛЯЮЩИЕ ДЕРЕКТИВЫ И ВЫРАЖЕНИЯ



// SASS поддерживает групировку свойств по пространству имён
.funky
  font:
    family: fantasy
    size: 30em
    weight: bold



                                            /// ШАБЛОННЫЕ СЕЛЕКТОРЫ
%inline-type
  display: inline-block
  margin-right: -4px
  vertical-align: top

.sgrid-N
  @extend %inline-type



                                            /// ПЕРЕМЕННЫЕ
// $main_width = $main-width
$width: 5em

$values: #ff0000, #00ff00, #0000ff
.primary
  @include colors($values...)


$content: "Новый тестовый текст?" !default  // default - если переменная еще не была обьявлена примет это значение

#main
  $width: 5em !global  // global - указывает что нужно обьявить переменную глоб. а не только на этом уровне вложености
  width: $width



                                            /// ТИПЫ ДАННЫХ

// -- СТРОКИ
// могут быть быть в "" и в '' и без них
// что бы цвет не сжимался SASS-ом, нужно заключать в кавычки

// -- МАПЫ
$status-colors: (
  primary: #000,
  success: #27BA6C,
  info: #03a9f4,
  warning: #FF8833,
  danger: #ff1a1a
)

.message
  @each $status, $color in $status-colors
    &--#{$status}
      background: $color



                                            /// ОПЕРАЦИИ

// деление
a
  font: 10px/8px              // Явный CSS, деление отсутствует
  $width: 1000px
  width: $width/2             // Используется переменная, операция деления
  width: round(1.5)/2         // Используется функция, операция деления
  height: (500px/2)           // Обособление скобками, операция деления
  margin-left: 5px + 8px/2px  // Используется +, операция деления


// строки
p
  cursor: e + -resize
  // ->
  cursor: e-resize


  content: "Foo " + Bar
  font-family: sans- + "serif"
  // ->
  content: "Foo Bar"
  font-family: sans-serif


// логические операции
// and, or, not
$menuOn: true
$menuDropDown: false

.menu li
  color: #ff0000
  text-decoration: underline
  @if $menuOn == true and $menuDropDown == true
    position: relative
